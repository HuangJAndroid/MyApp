<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:statusBarColor">@color/colorMain</item>
        <!--1.colorPrimary 应用的主要色调，actionBar默认使用该颜色，Toolbar导航栏的底色-->
        <!--2.colorPrimaryDark 应用的主要暗色调，statusBarColor默认使用该颜色-->
        <!--3.statusBarColor 状态栏颜色，默认使用colorPrimaryDark-->
        <!--4.windowBackground 窗口背景颜色-->
        <!--5.navigationBarColor 底部栏颜色-->
        <!--6.colorForeground 应用的前景色，ListView的分割线，switch滑动区默认使用该颜色-->
        <!--7.colorBackground 应用的背景色，popMenu的背景默认使用该颜色-->
        <!--8.colorAccent CheckBox，RadioButton，SwitchCompat等一般控件的选中效果默认采用该颜色-->
        <!--9.colorControlNormal CheckBox，RadioButton，SwitchCompat等默认状态的颜色。-->
        <!--10.colorControlHighlight 控件按压时的色调-->
        <!--11.colorControlActivated 控件选中时的颜色，默认使用colorAccent-->
        <!--12.colorButtonNormal 默认按钮的背景颜色-->
        <!--13.editTextColor：默认EditView输入框字体的颜色。-->
        <!--14.textColor Button，textView的文字颜色-->
        <!--15.textColorPrimaryDisableOnly RadioButton checkbox等控件的文字-->
        <!--16.textColorPrimary 应用的主要文字颜色，actionBar的标题文字默认使用该颜色-->
        <!--17.colorSwitchThumbNormal: switch thumbs 默认状态的颜色. (switch off)-->
    </style>

    <style name="RadioButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:button">@null</item>
        <item name="android:layout_weight">1</item>
        <item name="android:gravity">center</item>
        <item name="android:padding">3dp</item>
    </style>

    <!--对话框的宽度铺满-->
 <style name="AcitvityDialog" parent="dialog_style_dim_3"></style>

    <style name="dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:backgroundDimEnabled">true</item>
    </style>


    <!-- 弹出窗口样式 对话框可以圆角-->
    <style name="dialog_style_dim_3" parent="@style/dialog_style">
        <item name="android:windowIsFloating">true</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:backgroundDimAmount">0.3</item>
    </style>

    <style name="dialog_style" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <!-- windowIsFloating属性很重要，true：弹窗（root参数被过滤） false：普通activity -->
        <!--<item name="android:windowIsFloating">false</item>-->
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:backgroundDimEnabled">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:background">@android:color/transparent</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowSoftInputMode">stateHidden|adjustResize</item>
    </style>

</resources>
